#include<iostream>
#include<cstdlib>
#include<cmath>
using namespace std;
class Shape
{
      public:
             virtual double area()=0;
             virtual double circumference()=0;
             void show_area()
             {
                  cout<<"area="<<area()<<endl;
             }
             void show_circumference()
             {
                  cout<<"circumference="<<circumference()<<endl;
             }
     
};
class Rectangle : public Shape
{
      protected:
                double lenght;
                double width;
      public:
             Rectangle(double L=0,double W=0)
             {
                              lenght=L;
                              width=W; 
             }
             virtual double area()
             {
                     return lenght*width;
             }
             virtual double circumference()
             {
                     return 2*(lenght+width);
             }
};
class Circle : public Shape
{
      protected:
                double half;
      public:
             Circle(double H=0)
             {
                           half=H;
             }
             virtual double area()
             {
                     return half*half*3.14;
             }
             virtual double circumference()
             {
                     return 2*3.14*half;
             }
};
class Triangle : public Shape
{
      protected:
                double a1,a2,a3;
      public:
             Triangle(double aa1=0,double aa2=0,double aa3=0)
             {
                             a1=aa1;
                             a2=aa2;
                             a3=aa3;
             }
             virtual double area()
             {
                     double S=(a1+a2+a3)/2;
                     double A=sqrt(S*(S-a1)*(S-a2)*(S-a3));
                     return A;
             }
             virtual double circumference()
             {
                     return a1+a2+a3;
             }
};
class Square : public Rectangle
{
      public:
             Square(double l=0,double w=0) : Rectangle(l,w){}
      
};
class RightTriangle : public Triangle
{
      public:
             RightTriangle(double a=0,double b=0,double c=0): Triangle(a,b,c){}
};
int main(void)
{
    Shape *ptr=NULL;
    int check=0;
    int type=0;
    double end[5][6]={0};
    int count=0;
    while(check<5)
    {
                   cout<<"1.Rectangle 2.Circle 3.Triangle 4.Square 5.RightTriangle"<<endl;
                   cout<<"choose the ahsp what you whant:";
                   cin>>type;
                   switch (type)
                   {
                          case 1:
                               {
                                                int L,W;
                                                cout<<"insert length:";
                                                cin>>L;
                                                cout<<"insert width:";
                                                cin>>W;
                                                ptr= new Rectangle(L,W);
                                                ptr->show_area();
                                                ptr->show_circumference();
                                                end[count][0]=L;
                                                end[count][1]=W;
                                                end[count][3]=1;
                                                end[count][4]=ptr->area();
                                                end[count][5]=ptr->circumference();
                                                count++; 
                                                check++;
                                                cout<<endl;
                                                delete []ptr;
                                                break;
                               }
                          case 2:
                               {
                                                int H;
                                                cout<<"insert radius:";
                                                cin>>H;
                                                ptr= new Circle(H);
                                                ptr->show_area();
                                                ptr->show_circumference();
                                                end[count][0]=H;
                                                end[count][3]=2;
                                                end[count][4]=ptr->area();
                                                end[count][5]=ptr->circumference();
                                                count++; 
                                                check++;
                                                cout<<endl;
                                                delete []ptr;
                                                break;
                               }
                          case 3:
                               {
                                                int A,B,C;
                                                cout<<"insert num1 side:";
                                                cin>>A;
                                                cout<<"insert num2 side:";
                                                cin>>B;
                                                cout<<"insert num3 side:";
                                                cin>>C;
                                                ptr= new Triangle(A,B,C);
                                                ptr->show_area();
                                                ptr->show_circumference();
                                                end[count][0]=A;
                                                end[count][1]=B;
                                                end[count][2]=C;
                                                end[count][3]=3;
                                                end[count][4]=ptr->area();
                                                end[count][5]=ptr->circumference();
                                                count++; 
                                                check++;
                                                cout<<endl;
                                                delete []ptr;
                                                break;
                               }
                          case 4:
                               {
                                                int L,W;
                                                cout<<"insert length:";
                                                cin>>L;
                                                cout<<"insert width";
                                                cin>>W;
                                                ptr= new Square(L,W);
                                                ptr->show_area();
                                                ptr->show_circumference();
                                                end[count][0]=L;
                                                end[count][1]=W;
                                                end[count][3]=4;
                                                end[count][4]=ptr->area();
                                                end[count][5]=ptr->circumference();
                                                count++; 
                                                check++;
                                                cout<<endl;
                                                delete []ptr;
                                                break;
                               }
                          case 5:
                               {
                                                int A,B,C;
                                                cout<<"insert num1 side:";
                                                cin>>A;
                                                cout<<"insert num2 side:";
                                                cin>>B;
                                                cout<<"insert num3 side:";
                                                cin>>C;
                                                ptr= new RightTriangle(A,B,C);
                                                ptr->show_area();
                                                ptr->show_circumference();
                                                end[count][0]=A;
                                                end[count][1]=B;
                                                end[count][2]=C;
                                                end[count][3]=5;
                                                end[count][4]=ptr->area();
                                                end[count][5]=ptr->circumference();
                                                count++;
                                                check++;
                                                cout<<endl;
                                                delete []ptr;
                                                break;
                               }
                               
                   }
    }
    cout<<"================================"<<endl;
    cout<<"sort by surface area:"<<endl; 
    for(int i=count;i>0;i--)
    {
            for(int j=0;j<count;j++)
            {
                    if(end[j+1][4]<end[j][4])
                    {
                            double change[6];
                            change[0]=end[j][0];
                            change[1]=end[j][1];
                            change[2]=end[j][2];
                            change[3]=end[j][3];
                            change[4]=end[j][4];
                            change[5]=end[j][5];
                            
                            end[j][0]=end[j+1][0];
                            end[j][1]=end[j+1][1];
                            end[j][2]=end[j+1][2];
                            end[j][3]=end[j+1][3];
                            end[j][4]=end[j+1][4];
                            end[j][5]=end[j+1][5];
                            
                            end[j+1][0]=change[0];
                            end[j+1][1]=change[1];
                            end[j+1][2]=change[2];
                            end[j+1][3]=change[3];
                            end[j+1][4]=change[4];
                            end[j+1][5]=change[5];
                            
                    }
                                             
            }
    }
    for(int i=0;i<=count;i++)
    {
            if(end[i][3]==1)
            {
                cout<<"Shape:Rectangle"<<endl;
                cout<<"length="<<end[i][0]<<endl;
                cout<<"width="<<end[i][1]<<endl;
                cout<<"================================"<<endl;
            } 
            if(end[i][3]==2)
            { 
                cout<<"Shape:Circle"<<endl;
                cout<<"radius="<<end[i][0]<<endl;
                cout<<"================================"<<endl;
            }
            if(end[i][3]==3)
            {
                cout<<"Shape:Triangle"<<endl;
                cout<<"three sides:"<<end[i][0]<<" "<<end[i][1]<<" "<<end[i][2]<<endl;
                cout<<"================================"<<endl;
            }
            if(end[i][3]==4)
            {
                cout<<"Shape:Square"<<endl;
                cout<<"length="<<end[i][0]<<endl;
                cout<<"width="<<end[i][1]<<endl;
                cout<<"================================"<<endl;
            }
            if(end[i][3]==5)
            {
                cout<<"Shape:RightTriangle"<<endl;
                cout<<"three sides:"<<end[i][0]<<" "<<end[i][1]<<" "<<end[i][2]<<endl;
                cout<<"================================"<<endl;
            }
              
    }
    cout<<"================================"<<endl;
    cout<<"sort by sides:"<<endl; 
    for(int i=count;i>0;i--)
    {
            for(int j=0;j<count;j++)
            {
                    if(end[j+1][5]<end[j][5])
                    {
                            double change[6];
                            change[0]=end[j][0];
                            change[1]=end[j][1];
                            change[2]=end[j][2];
                            change[3]=end[j][3];
                            change[4]=end[j][4];
                            change[5]=end[j][5];
                            
                            end[j][0]=end[j+1][0];
                            end[j][1]=end[j+1][1];
                            end[j][2]=end[j+1][2];
                            end[j][3]=end[j+1][3];
                            end[j][4]=end[j+1][4];
                            end[j][5]=end[j+1][5];
                            
                            end[j+1][0]=change[0];
                            end[j+1][1]=change[1];
                            end[j+1][2]=change[2];
                            end[j+1][3]=change[3];
                            end[j+1][4]=change[4];
                            end[j+1][5]=change[5];
                            
                    }
                                             
            }
    }
    for(int i=0;i<=count;i++)
    {
            if(end[i][3]==1)
            {
                cout<<"Shape:Rectangle"<<endl;
                cout<<"length="<<end[i][0]<<endl;
                cout<<"width="<<end[i][1]<<endl;
                cout<<"================================"<<endl;
            } 
            if(end[i][3]==2)
            { 
                cout<<"Shape:Circle"<<endl;
                cout<<"radius="<<end[i][0]<<endl;
                cout<<"================================"<<endl;
            }
            if(end[i][3]==3)
            {
                cout<<"Shape:Triangle"<<endl;
                cout<<"three sides:"<<end[i][0]<<" "<<end[i][1]<<" "<<end[i][2]<<endl;
                cout<<"================================"<<endl;
            }
            if(end[i][3]==4)
            {
                cout<<"Shape:Square"<<endl;
                cout<<"length="<<end[i][0]<<endl;
                cout<<"width="<<end[i][1]<<endl;
                cout<<"================================"<<endl;
            }
            if(end[i][3]==5)
            {
                cout<<"Shape:RightTriangle"<<endl;
                cout<<"three sides:"<<end[i][0]<<" "<<end[i][1]<<" "<<end[i][2]<<endl;
                cout<<"================================"<<endl;
            }
              
    }
    system("pause");
    return 0;
}